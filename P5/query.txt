-- (γ Pno; sum(Hours) -> Hours (works_on) )

-- π Sex (σ Dno=1 (employee))

-- project

-- works_on 

-- π Ssn, Fname, Minit, Lname, Pname ( ((employee) ⨝ Ssn=Essn (works_on)) ⨝ Pno = Pnumber (project) )

-- Obtenha o nome de todos os funcionários supervisionados por ‘Carlos D Gomes’


-- a = (π Ssn (σ Fname='Carlos' ∧ Minit='D' ∧ Lname='Gomes' (employee)))

-- π Fname,Minit,Lname ( σ Super_ssn=a (employee) )

-- employee ⨝ Super_ssn=Ssn_Carlos ρ Ssn_Carlos←Ssn (π Ssn (σ Fname='Carlos' ∧ Minit='D' ∧ Lname='Gomes' (employee)))

-- Para cada projeto, listar o seu nome e o número de horas (por semana) gastos nesse projeto por todos os funcionários

-- γ Pnumber, Pname; sum(Hours) -> Hours ( (project) ⨝ Pnumber=Pno (works_on) )

-- γ Pnumber, Pname; sum(Hours) -> sum_hours ( (project) ⨝ Pnumber=Pno (works_on) )




-- Obter o nome de todos os funcionários do departamento 3 que trabalham mais de 20 horas por semana no projeto ‘Aveiro Digital’

-- (π Fname, Minit, Lname (σ Dno=3 (employee)))

-- Output Esperado. Substituir Pno=1 por uma expressão.
-- π Fname, Minit, Lname ( σ Pno=1 (σ Dno=3 (employee) ⨝ Hours>20 (works_on) ) ) 

-- π Fname, Minit, Lname ( (π Pnumber (σ Pname='Aveiro Digital' (project))) ⨝ (σ Dno=3 (employee) ⨝ Hours>20 (works_on) ) ) 

-- (σ Dno=3 (employee) ⨝ Hours>20 (works_on)) ⨝ Pno=Pnumber (σ Pname='Aveiro Digital' (project))
-- σ Pname='Aveiro Digital' (project)

-- Nºdo projeto
-- π Pnumber (σ Pname='Aveiro Digital' (project))

-- σ Dno=3 (employee) ⨝ Hours>20 (works_on)

-- funcionario_projeto = employee ⨝Ssn=Essn works_on
-- π Ssn,Fname,Minit,Lname (σ Dno=3 ∧ Hours>20 (funcionario_projeto))

works_on
-- employee

-- JA: 321233765
-- PS: 183623612

-- σ Dno=3 (employee) ⨝ Hours>20 (works_on)